{"componentChunkName":"component---src-templates-docs-js","path":"/storage/database-naming-convention","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"84142e44-16ec-5c10-a397-499f81fc81dc","title":"Database naming convention","slug":"/storage/database-naming-convention"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Database naming convention\",\n  \"showMetadata\": true,\n  \"editable\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Using plural or singular table name\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Using plural name\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A table is a collection of entity and it is logical to use plural name for a table.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It makes sense to write SQL statement to get all records from your table, e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"select * from customers\")))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Using singular name\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use singular table name when pointing to a database record is more natural than plural name. e.g.\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"select customer.name\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"select customers.name\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For plural table name, you can use table alias e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"select customer.name from customers as customer\"), \".\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It avoids confusion of English pluralization:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"activity becomes activities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"person becomes people\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"data remains data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"history remains history (uncountable noun, only singular form)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It avoids confusion when use a link table.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Orders and Products tables would give OrderProducts or OrdersProducts. Neither sounds correct.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When using singular, you can consider using the set theory to a table.\\nIt means any instance in the set is representative of the set.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Table represents a collection of entity. Then we don't need to emphasize it by plural naming.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consistent foreign key column's name with table prefix pattern e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"customer_id\"), \" not \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"customers_id\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you want to identify a collection in an application, you can use a plural name such as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"customers\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For ORM e.g. Enitiy Framwork (EF), you can access an entity as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dbContext.DbSet<Customer>\"), \" which is consistent with a singular table name.\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Which one should I use?\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I personally prefer singular table name.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Be consistent naming in matter of plural or singular table name you choose.\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Credit/Sources\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://medium.com/@fbnlsr/the-table-naming-dilemma-singular-vs-plural-dc260d90aaff\"\n  }, \"https://medium.com/@fbnlsr/the-table-naming-dilemma-singular-vs-plural-dc260d90aaff\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dba.stackexchange.com/questions/13730/plural-vs-singular-table-name\"\n  }, \"https://dba.stackexchange.com/questions/13730/plural-vs-singular-table-name\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.databasestar.com/database-table-naming-conventions/\"\n  }, \"https://www.databasestar.com/database-table-naming-conventions/\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#using-plural-or-singular-table-name","title":"Using plural or singular table name","items":[{"url":"#using-plural-name","title":"Using plural name"},{"url":"#using-singular-name","title":"Using singular name"},{"url":"#which-one-should-i-use","title":"Which one should I use?"},{"url":"#creditsources","title":"Credit/Sources"}]}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"storage/database-naming-convention.md","fields":{"gitLogLatestAuthorName":"Suthep Sangvirotjanaphat","gitLogLatestAuthorEmail":"suthep@gfbd.co.th","gitLogLatestDate":"2 minutes ago"}},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"78cf4d39ddca0eb4163122b66827e994c937221b","date":"2021-04-20 06:58"}},"pageContext":{"id":"84142e44-16ec-5c10-a397-499f81fc81dc"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}