{"componentChunkName":"component---src-templates-docs-js","path":"/storage/database-migration-tools/dbup-cli","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"9cde0150-35c6-5ae9-a5e0-6bf3f31c494b","title":"dbup-cli","slug":"/storage/database-migration-tools/dbup-cli"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"dbup-cli\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"How to setup and use DbUp Command Line Interface (dbup-cli)\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Setup dbup-cli\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Here is for Ubuntu 18.04. For other OS, please check \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.microsoft.com/en-us/dotnet/core/install/\"\n  }, \"https://docs.microsoft.com/en-us/dotnet/core/install/\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add package repository.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"wget https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\\nsudo dpkg -i packages-microsoft-prod.deb\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Install .NET\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo apt-get update; \\\\\\n  sudo apt-get install -y apt-transport-https && \\\\\\n  sudo apt-get update && \\\\\\n  sudo apt-get install -y dotnet-sdk-5.0\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Install dbup-cli as a global tool.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"dotnet tool install --global dbup-cli\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check if you install dbup-cli properly.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"dbup --version\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Initialize dbup\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a new folder with name \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"migration\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CD to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"migration\"), \" folder.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run the following command to initialize dbup-cli.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"dbup init\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dbup.yml is created in the current working directory (migration folder).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example of current file structure.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"migration/\\n- dbup.yml\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Update dbup configuration file\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Edit content of dbup.yml, eg. connection string, folder to put schema version files.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"# dbup.yml\\ndbUp:\\n  version: 1\\n  provider: mysql\\n  connectionString: Server=$MYSQL_HOSTNAME$;Database=$MYSQL_DATABASE$;Uid=$MYSQL_USERNAME$;Pwd=$MYSQL_PASSWORD$;\\n  connectionTimeoutSec: 30\\n  scripts:\\n    - folder: schema-versions\\n      filter: /^(?!_)[\\\\w\\\\s-]+\\\\.sql$/\\n      # To use Regular Expression, you must surround the filter by forward-slashes.\\n      # Explain ^(?!_)[\\\\w-]+\\\\.sql$ pattern\\n      # Match a string that does not start with _ (negative look ahead)\\n      # then match a-z, A-Z, 0-9, _, space and - as a file name\\n      # then match a string ending with .sql as a file extension.\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This configuration makes dbpub to connect to a database on MySQL server.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We pass a connection string values as an environment variables e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"$MYSQL_HOSTNAME$\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MYSQL_DATABASE\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"schema-versions\"), \" folder to store our schema version files.\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Create a schema version file\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"schema-versions\"), \" folder in the same level as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dbpub.yml\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create some schema version files which container raw SQL statement in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"schema-versions\"), \" folder.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Here is the example of file structure.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"migration/\\n  - schema-versions/\\n    - _baseline.sql\\n    - _seed-data.sql\\n    - 2021-01-02 create-user-table.sql\\n  - dbup.yml\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Apply a schema version to a database\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run the following command to make some changes to your database.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"dbup upgrade\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Please not that our current working directory is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"migration\"), \" folder.\\nTherefore dbup will look for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dbup.yml\"), \" and schema version files inside \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"migration\"), \" folder.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Schema versions will be applied in order by name alphabetically.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A schema file name starting with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"_\"), \" will be ignored.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check your database to see if there is some changes from a schema version file and you should find \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SchemaVersions\"), \" table that stores an information of a version file that has already been applied to your database.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If there is no schema version file to be applied, dbup won't create \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SchemaVersions\"), \" table.\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Schema version as a plain SQL file\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u0E2A\\u0E23\\u0E49\\u0E32\\u0E07 schema version \\u0E41\\u0E1A\\u0E1A SQL file \\u0E15\\u0E23\\u0E07\\u0E19\\u0E35\\u0E49\\u0E2D\\u0E32\\u0E08\\u0E08\\u0E30\\u0E44\\u0E21\\u0E48 portable \\u0E40\\u0E1E\\u0E23\\u0E32\\u0E30\\u0E21\\u0E35 specific database vendors\\n\\u0E41\\u0E15\\u0E48\\u0E40\\u0E08\\u0E2D use case \\u0E19\\u0E49\\u0E2D\\u0E22\\u0E21\\u0E32\\u0E01\\u0E17\\u0E35\\u0E48\\u0E08\\u0E30\\u0E40\\u0E1B\\u0E25\\u0E35\\u0E48\\u0E22\\u0E19 database \\u0E43\\u0E19\\u0E20\\u0E32\\u0E22\\u0E2B\\u0E25\\u0E31\\u0E07\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23\\u0E40\\u0E1E\\u0E35\\u0E22\\u0E07 plain SQL schema version \\u0E44\\u0E21\\u0E48\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23 class \\u0E2B\\u0E23\\u0E37\\u0E2D script file \\u0E2A\\u0E33\\u0E2B\\u0E23\\u0E31\\u0E1A\\u0E41\\u0E15\\u0E48\\u0E25\\u0E30 shema version \\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E40\\u0E02\\u0E49\\u0E32\\u0E21\\u0E32\\u0E14\\u0E49\\u0E27\\u0E22\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Liquibase SQL \\u0E22\\u0E31\\u0E07\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E43\\u0E0A\\u0E49 XML change log file \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.liquibase.org/blog/plain-sql\"\n  }, \"https://www.liquibase.org/blog/plain-sql\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sequelize migration \\u0E22\\u0E31\\u0E07\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E43\\u0E0A\\u0E49 JavaScript file (\\u0E17\\u0E35\\u0E48\\u0E2A\\u0E32\\u0E21\\u0E32\\u0E23\\u0E16\\u0E1B\\u0E23\\u0E31\\u0E1A\\u0E43\\u0E2B\\u0E49\\u0E2D\\u0E48\\u0E32\\u0E19\\u0E08\\u0E32\\u0E01 SQL file \\u0E44\\u0E14\\u0E49) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/a/51958893/1872200\"\n  }, \"https://stackoverflow.com/a/51958893/1872200\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u0E40\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E27\\u0E48\\u0E32 Schema version \\u0E44\\u0E21\\u0E48\\u0E08\\u0E33\\u0E40\\u0E1B\\u0E47\\u0E19\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E21\\u0E35 downgrade\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u0E40\\u0E1E\\u0E23\\u0E32\\u0E30\\u0E2B\\u0E32\\u0E01\\u0E2D\\u0E2D\\u0E01\\u0E41\\u0E1A\\u0E1A\\u0E43\\u0E2B\\u0E49 schema backward compatible \\u0E01\\u0E31\\u0E1A older version of an application\\n\\u0E40\\u0E23\\u0E32\\u0E01\\u0E47\\u0E2A\\u0E32\\u0E21\\u0E32\\u0E23\\u0E16 rollback application \\u0E43\\u0E2B\\u0E49\\u0E17\\u0E33\\u0E07\\u0E32\\u0E19\\u0E15\\u0E48\\u0E2D\\u0E44\\u0E14\\u0E49 \\u0E41\\u0E25\\u0E30 investigate \\u0E1B\\u0E31\\u0E0D\\u0E2B\\u0E32\\n\\u0E14\\u0E31\\u0E07\\u0E19\\u0E31\\u0E49\\u0E19 schema version downgrade/rollback \\u0E43\\u0E19 production database \\u0E08\\u0E36\\u0E07\\u0E44\\u0E21\\u0E48\\u0E08\\u0E33\\u0E40\\u0E1B\\u0E47\\u0E19\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u0E41\\u0E15\\u0E48\\u0E01\\u0E47\\u0E40\\u0E2B\\u0E47\\u0E19\\u0E14\\u0E49\\u0E27\\u0E22\\u0E17\\u0E35\\u0E48\\u0E01\\u0E32\\u0E23 downgrade \\u0E21\\u0E35\\u0E1B\\u0E23\\u0E30\\u0E42\\u0E22\\u0E0A\\u0E19\\u0E4C\\u0E15\\u0E2D\\u0E19 development\\n\\u0E41\\u0E15\\u0E48\\u0E15\\u0E23\\u0E07\\u0E19\\u0E35\\u0E49\\u0E40\\u0E23\\u0E32 run SQL statement \\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E25\\u0E1A schema version record \\u0E17\\u0E35\\u0E48\\u0E44\\u0E14\\u0E49 apply \\u0E44\\u0E1B\\u0E41\\u0E25\\u0E49\\u0E27\\u0E01\\u0E47\\u0E44\\u0E21\\u0E48\\u0E44\\u0E14\\u0E49\\u0E41\\u0E22\\u0E48\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u0E2D\\u0E48\\u0E32\\u0E19\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E40\\u0E15\\u0E34\\u0E21 \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://flywaydb.org/documentation/command/undo#important-notes\"\n  }, \"https://flywaydb.org/documentation/command/undo#important-notes\")))))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Useful links\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dbup-cli project \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/drwatson1/dbup-cli\"\n  }, \"https://github.com/drwatson1/dbup-cli\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#how-to-setup-and-use-dbup-command-line-interface-dbup-cli","title":"How to setup and use DbUp Command Line Interface (dbup-cli)"},{"url":"#setup-dbup-cli","title":"Setup dbup-cli"},{"url":"#initialize-dbup","title":"Initialize dbup"},{"url":"#update-dbup-configuration-file","title":"Update dbup configuration file"},{"url":"#create-a-schema-version-file","title":"Create a schema version file"},{"url":"#apply-a-schema-version-to-a-database","title":"Apply a schema version to a database"},{"url":"#schema-version-as-a-plain-sql-file","title":"Schema version as a plain SQL file"},{"url":"#useful-links","title":"Useful links"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"storage/database-migration-tools/dbup-cli.md","fields":{"gitLogLatestAuthorName":"Suthep Sangvirotjanaphat","gitLogLatestAuthorEmail":"suthep@gfbd.co.th","gitLogLatestDate":"2 minutes ago"}},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"78cf4d39ddca0eb4163122b66827e994c937221b","date":"2021-04-20 06:58"}},"pageContext":{"id":"9cde0150-35c6-5ae9-a5e0-6bf3f31c494b"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}