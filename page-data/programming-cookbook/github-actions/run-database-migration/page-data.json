{"componentChunkName":"component---src-templates-docs-js","path":"/programming-cookbook/github-actions/run-database-migration","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"3505fa23-9407-5dea-9d23-7b73b34ff192","title":"Run database migration","slug":"/programming-cookbook/github-actions/run-database-migration"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Run database migration\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Simple GitHub Actions workflow to run database migration with dbup-cli\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We suggest you to read \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/storage/migration-tools/dbup-cli\"\n  }, \"How to setup and use dbup-cli\"), \" before using this workflow.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: Run database migration\\n\\non:\\n  push:\\n    branches:\\n      - main\\nenv:\\n  DOTNET_VERSION: 5.0.x # Set the.NET version to use\\n\\njobs:\\n  run-db-migration:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Check out the later source code from \\\"${{ github.ref  }}\\\" branch\\n        uses: actions/checkout@v2\\n\\n      - name: Setup .NET SDK version ${{ env.DOTNET_VERSION }}\\n        uses: actions/setup-dotnet@v1\\n        with:\\n          dotnet-version: ${{ env.DOTNET_VERSION }}\\n\\n      - name: Install dbup-cli as a .NET global tool\\n        run: dotnet tool install --global dbup-cli\\n\\n      - name: Apply a new schema version\\n        working-directory: migration # All configuration file and schema version files are in this 'migration' folder.\\n        env:\\n          MYSQL_HOSTNAME: ${{ secrets.MYSQL_HOSTNAME }}\\n          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}\\n          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}\\n          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}\\n        run: dbup upgrade\\n\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#simple-github-actions-workflow-to-run-database-migration-with-dbup-cli","title":"Simple GitHub Actions workflow to run database migration with dbup-cli"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"programming-cookbook/github-actions/run-database-migration.md","fields":{"gitLogLatestAuthorName":"Suthep Sangvirotjanaphat","gitLogLatestAuthorEmail":"suthep@gfbd.co.th","gitLogLatestDate":"2 minutes ago"}},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"78cf4d39ddca0eb4163122b66827e994c937221b","date":"2021-04-20 06:58"}},"pageContext":{"id":"3505fa23-9407-5dea-9d23-7b73b34ff192"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}