{"componentChunkName":"component---src-templates-docs-js","path":"/programming-cookbook/github-actions/github-actions-fundamentals","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"984adb76-8a82-5383-981b-cc89a0a23be6","title":"GitHub Actions fundamentals","slug":"/programming-cookbook/github-actions/github-actions-fundamentals"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"GitHub Actions fundamentals\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"order\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Reference for Workflow syntax (YAML)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions\"\n  }, \"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions\")))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Workflow commands for GitHub Actions\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions\"\n  }, \"https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Actions can communicate with the runner machine to set environment variables, output values used by other actions, add debug messages to the output logs, and other tasks.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Most workflow commands use the echo command in a specific format, while others are invoked by writing to a file.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"jobs.<job_id>.steps[*].run\"), \".\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Setting an environment variable\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We can define environment variables at workflow level, job level and step level.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We can set environment variable with a workflow command in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"jobs.<job_id>.steps[*].run\"), \" e.g.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"  - run: |\\n    # literal value\\n    echo \\\"action_state=yellow\\\" >> $GITHUB_ENV\\n\\n    # value from a secret\\n    echo \\\"SLACK_WEBHOOK=${{ secrets.SLACK_WEBHOOK }}\\\" >> $GITHUB_ENV\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Context and expression syntax for GitHub Actions\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions\"\n  }, \"https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use expression to programmatically set variables in workflow files and access contexts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can combine literals, context references, and functions using operators.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Contexts are a way to access information about workflow runs, runner environments, jobs and steps.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Contexts use the expression syntax.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"# Expression syntax\\n${{ <expression> }}\\n\\nif: ${{ <expression> }}\\nif: <expression> # You can omit {{ }}\\n\\n# Read context value\\n${{ <context> }}\\n${{ env.VARIABLE_NAME }}\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Useful predefined contexts\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"github.sha\"), \" The commit SHA that triggered the workflow run.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"github.ref\"), \" The branch or tag ref that triggered the workflow run.\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Environment variables\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.github.com/en/actions/reference/environment-variables\"\n  }, \"https://docs.github.com/en/actions/reference/environment-variables\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To use the value of an environment variable in a workflow file, you should use the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"env\"), \" context.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you want to use the value of an environment variable inside a runner,\\nyou can use the runner operating system's normal method for reading environment variables. e.g. \\\\$VARIABLE_NAME\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"# Use environment with GitHub `env` context and normal operation system as $ENVIRONMENT_VARIABLE\\nenv:\\n  FIRST_NAME: Mona\\n  DAY_OF_WEEK: Mona\\n\\nif: env.DAY_OF_WEEK == 'Mon'\\nrun: echo \\\"Hello $FIRST_NAME at ${{ env.DAY_OF_WEEK }}\\\"\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Run job on a specific repository only\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"jobs:\\n  job_id:\\n    name: Job name\\n    if: github.repository == username/repository-name\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Conditional set environment variables\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Useful for switching variables based on a current branch/environment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.community/t/possible-to-use-conditional-in-the-env-section-of-a-job/135170/3\"\n  }, \"https://github.community/t/possible-to-use-conditional-in-the-env-section-of-a-job/135170/3\")))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Ternary workflow expression\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"${{ github.ref == env.MAIN_BRANCH && secrets.PRO_PUBLISH_PROFILE || secrets.DEV_PUBLISH_PROFILE }}\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Run a job based on a condition with if expression\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.blog/changelog/2019-10-01-github-actions-new-workflow-syntax-features/\"\n  }, \"https://github.blog/changelog/2019-10-01-github-actions-new-workflow-syntax-features/\")))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Find more virtual environments\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/actions/virtual-environments\"\n  }, \"https://github.com/actions/virtual-environments\")))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"An action\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An action is unit of code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can use an action defined in the same repository as the workflow, a public repository, or in a published Docker container image.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Version of the action:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using the commit SHA of a released action version is the safest for stability and security.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using the specific major action version allows you to receive critical fixes and security patches while still maintaining compatibility. It also assures that your workflow should still work.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using the default branch of an action may be convenient, but if someone releases a new major version with a breaking change, your workflow could break.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More details \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepsuses\"\n  }, \"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepsuses\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"steps:\\n  # Reference the major version of a release\\n  - uses: actions/setup-node@v1\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Known issues:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Workflow level environment variables can't be used at job level, it can only be used in step level.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.community/t/how-to-set-and-access-a-workflow-variable/17335/6?u=aaronamm\"\n  }, \"https://github.community/t/how-to-set-and-access-a-workflow-variable/17335/6?u=aaronamm\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Workaround is:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set Environment Var\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Step takes it as input and sets it as the step\\u2019s output.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Environment variable can now be accessed via \\u2018needs\\u2019.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Code example:\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"env:\\n  Deploy: 'false'\\n\\njobs:\\n  prejob:\\n    runs-on: ubuntu-latest\\n    outputs:\\n      envvalue: ${{ steps.setvar.outputs.envvar }}\\n    steps:\\n      - name: set value\\n        id: setvar\\n        run: |\\n          echo \\\"::set-output name=envvar::$Deploy\\\"  # get top level env and set it as output\\n  envcheck:\\n    needs: [prejob]\\n    if: ${{needs.prejob.outputs.envvalue=='false'}} # check env value in job level expression now.\\n    runs-on: [ubuntu-latest]\\n    steps:\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"You can use a step's name with step's uses\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idsteps\"\n  }, \"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idsteps\")))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Specific branch name pattern to trigger an action\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Match on a specific branch\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"on:\\n  push:\\n    branches:\\n      - '*'         # matches every branch that doesn't contain a '/'\\n      - '*/*'       # matches every branch containing a single '/'\\n      - '**'        # matches every branch\\n      - '!master'   # excludes master\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Match all branches\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"on: push\\non: [push, pull_request]\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ignore branches\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"on:\\n  push:\\n    branches-ignore:\\n      - master\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Path, useful for monorepo\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestpaths\"\n  }, \"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestpaths\")))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Retention period of GitHub Actions\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For public repositories: you can change this retention period to anywhere between 1 day or 90 days.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For private, internal, and GitHub Enterprise repositories: you can change this retention period to anywhere between 1 day or 400 days.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"REF: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.github.com/en/github/administering-a-repository/configuring-the-retention-period-for-github-actions-artifacts-and-logs-in-your-repository\"\n  }, \"https://docs.github.com/en/github/administering-a-repository/configuring-the-retention-period-for-github-actions-artifacts-and-logs-in-your-repository\")))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Change working directory\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"At step level:\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"  - name: Clean temp directory\\n    run: rm -rf *\\n    working-directory: ./temp\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#reference-for-workflow-syntax-yaml","title":"Reference for Workflow syntax (YAML)"},{"url":"#workflow-commands-for-github-actions","title":"Workflow commands for GitHub Actions"},{"url":"#setting-an-environment-variable","title":"Setting an environment variable"},{"url":"#context-and-expression-syntax-for-github-actions","title":"Context and expression syntax for GitHub Actions"},{"url":"#useful-predefined-contexts","title":"Useful predefined contexts"},{"url":"#environment-variables","title":"Environment variables"},{"url":"#run-job-on-a-specific-repository-only","title":"Run job on a specific repository only"},{"url":"#conditional-set-environment-variables","title":"Conditional set environment variables"},{"url":"#ternary-workflow-expression","title":"Ternary workflow expression"},{"url":"#run-a-job-based-on-a-condition-with-if-expression","title":"Run a job based on a condition with if expression"},{"url":"#find-more-virtual-environments","title":"Find more virtual environments"},{"url":"#an-action","title":"An action"},{"url":"#known-issues","title":"Known issues:"},{"url":"#you-can-use-a-steps-name-with-steps-uses","title":"You can use a step's name with step's uses"},{"url":"#specific-branch-name-pattern-to-trigger-an-action","title":"Specific branch name pattern to trigger an action"},{"url":"#path-useful-for-monorepo","title":"Path, useful for monorepo"},{"url":"#retention-period-of-github-actions","title":"Retention period of GitHub Actions"},{"url":"#change-working-directory","title":"Change working directory"}]},"timeToRead":2,"parent":{"__typename":"File","relativePath":"programming-cookbook/github-actions/github-actions-fundamentals.md","fields":{"gitLogLatestAuthorName":"Suthep Sangvirotjanaphat","gitLogLatestAuthorEmail":"suthep@gfbd.co.th","gitLogLatestDate":"2 minutes ago"}},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"78cf4d39ddca0eb4163122b66827e994c937221b","date":"2021-04-20 06:58"}},"pageContext":{"id":"984adb76-8a82-5383-981b-cc89a0a23be6"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}