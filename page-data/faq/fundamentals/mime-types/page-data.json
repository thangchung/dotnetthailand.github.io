{"componentChunkName":"component---src-templates-docs-js","path":"/faq/fundamentals/mime-types","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"dfd54a80-6754-5339-a43b-342ef061aff6","title":"MIME Types for HTTP content type","slug":"/faq/fundamentals/mime-types"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MIME Types for HTTP content type\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"MIME stands for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Multipurpose Internet Mail Extensions\"), \".\"), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Microsoft Office MIME types for HTTP content\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Extension MIME Type\\n.doc      application/msword\\n.dot      application/msword\\n\\n.docx     application/vnd.openxmlformats-officedocument.wordprocessingml.document\\n.dotx     application/vnd.openxmlformats-officedocument.wordprocessingml.template\\n.docm     application/vnd.ms-word.document.macroEnabled.12\\n.dotm     application/vnd.ms-word.template.macroEnabled.12\\n\\n.xls      application/vnd.ms-excel\\n.xlt      application/vnd.ms-excel\\n.xla      application/vnd.ms-excel\\n\\n.xlsx     application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\n.xltx     application/vnd.openxmlformats-officedocument.spreadsheetml.template\\n.xlsm     application/vnd.ms-excel.sheet.macroEnabled.12\\n.xltm     application/vnd.ms-excel.template.macroEnabled.12\\n.xlam     application/vnd.ms-excel.addin.macroEnabled.12\\n.xlsb     application/vnd.ms-excel.sheet.binary.macroEnabled.12\\n\\n.ppt      application/vnd.ms-powerpoint\\n.pot      application/vnd.ms-powerpoint\\n.pps      application/vnd.ms-powerpoint\\n.ppa      application/vnd.ms-powerpoint\\n\\n.pptx     application/vnd.openxmlformats-officedocument.presentationml.presentation\\n.potx     application/vnd.openxmlformats-officedocument.presentationml.template\\n.ppsx     application/vnd.openxmlformats-officedocument.presentationml.slideshow\\n.ppam     application/vnd.ms-powerpoint.addin.macroEnabled.12\\n.pptm     application/vnd.ms-powerpoint.presentation.macroEnabled.12\\n.potm     application/vnd.ms-powerpoint.template.macroEnabled.12\\n.ppsm     application/vnd.ms-powerpoint.slideshow.macroEnabled.12\\n\\n.mdb      application/vnd.ms-access\\n\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"REF: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/a/4212908/1872200\"\n  }, \"https://stackoverflow.com/a/4212908/1872200\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Useful link\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Microsoft/referencesource/blob/master/System.Web/MimeMapping.cs#L73\"\n  }, \"MimeMapping.GetMimeMapping(String) .NET Framework\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zone117x/MimeMapping\"\n  }, \"Nuget MimeMapping\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dotnet add package MimeMapping\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#microsoft-office-mime-types-for-http-content","title":"Microsoft Office MIME types for HTTP content"},{"url":"#useful-link","title":"Useful link"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"faq/fundamentals/mime-types.md","fields":{"gitLogLatestAuthorName":"Suthep Sangvirotjanaphat","gitLogLatestAuthorEmail":"suthep@gfbd.co.th","gitLogLatestDate":"2 minutes ago"}},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"78cf4d39ddca0eb4163122b66827e994c937221b","date":"2021-04-20 06:58"}},"pageContext":{"id":"dfd54a80-6754-5339-a43b-342ef061aff6"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}