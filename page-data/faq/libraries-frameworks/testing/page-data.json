{"componentChunkName":"component---src-templates-docs-js","path":"/faq/libraries-frameworks/testing","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"840455d9-d350-5130-affb-fb8acc0aa6c3","title":"Testing","slug":"/faq/libraries-frameworks/testing"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Testing\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Test Framework\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/xunit/xunit\"\n  }, \"xUnit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nunit/nunit\"\n  }, \"NUnit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Moq\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Mocking Libraries\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/FakeItEasy/FakeItEasy\"\n  }, \"FakeItEasy\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/nsubstitute/NSubstitute\"\n  }, \"NSubstitute\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/moq/moq\"\n  }, \"Moq\")))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"E2E testing\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cypress\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Puppeteer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Playwright\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Selenium\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Playwright\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Test Safari \\u0E44\\u0E14\\u0E49\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript/TypeScript document \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://playwright.dev/docs/core-concepts/\"\n  }, \"https://playwright.dev/docs/core-concepts/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Python document \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://playwright.dev/python/docs/core-concepts/\"\n  }, \"https://playwright.dev/python/docs/core-concepts/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Java document \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://playwright.dev/java/docs/core-concepts\"\n  }, \"https://playwright.dev/java/docs/core-concepts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JS/TS \\u0E21\\u0E35 document \\u0E17\\u0E35\\u0E48 playwright.dev => native, first class citizen \\u0E2D\\u0E22\\u0E39\\u0E48\\u0E41\\u0E25\\u0E49\\u0E27\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Java \\u0E21\\u0E35 document \\u0E17\\u0E35\\u0E48 playwright.dev => target \\u0E04\\u0E19\\u0E40\\u0E02\\u0E35\\u0E22\\u0E19 Selenium\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Java \\u0E21\\u0E35 document \\u0E17\\u0E35\\u0E48 playwright.dev => target tester \\u0E17\\u0E35\\u0E48\\u0E43\\u0E0A\\u0E49 Python\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"C# \\u0E22\\u0E31\\u0E07\\u0E44\\u0E21\\u0E48\\u0E21\\u0E35 document \\u0E17\\u0E35\\u0E48 playwright.dev => low priority \\u0E17\\u0E35\\u0E48\\u0E44\\u0E1B\\u0E14\\u0E39\\u0E17\\u0E35\\u0E48 github \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/microsoft/playwright-sharp\"\n  }, \"https://github.com/microsoft/playwright-sharp\"), \" \\uD83E\\uDD23\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Testing public URL\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ngrok\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Configure ngrok for multiple ports\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open ~/.ngrok2/ngrok.yml\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add the following contents:\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"authtoken: your token\\ntunnels:\\n  first:\\n    addr: 3000\\n    proto: http\\n  second:\\n    addr: 3001\\n    proto: http\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Start ngrok with a command:\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"./ngrok.exe start --all\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More info \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/a/38645042/1872200\"\n  }, \"https://stackoverflow.com/a/38645042/1872200\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#test-framework","title":"Test Framework"},{"url":"#mocking-libraries","title":"Mocking Libraries"},{"url":"#e2e-testing","title":"E2E testing"},{"url":"#playwright","title":"Playwright"},{"url":"#testing-public-url","title":"Testing public URL","items":[{"url":"#configure-ngrok-for-multiple-ports","title":"Configure ngrok for multiple ports"}]}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"faq/libraries-frameworks/testing.md","fields":{"gitLogLatestAuthorName":"Suthep Sangvirotjanaphat","gitLogLatestAuthorEmail":"suthep@gfbd.co.th","gitLogLatestDate":"2 minutes ago"}},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"78cf4d39ddca0eb4163122b66827e994c937221b","date":"2021-04-20 06:58"}},"pageContext":{"id":"840455d9-d350-5130-affb-fb8acc0aa6c3"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}